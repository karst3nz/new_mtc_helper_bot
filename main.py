import sys
from threading import Thread
from config import *
from utils.db import DB
from handlers import msg, inline, cmd, event
from utils.log import create_logger


def start_bot():
    asyncio.create_task(dp.start_polling(bot, close_bot_session=False, handle_signals=False))


def cmds():
    asyncio.create_task(bot.set_my_commands([
        types.BotCommand(command="/start", description="üéì –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        types.BotCommand(command="/settings", description="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
        types.BotCommand(command="/hours", description="‚è∞ –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ —á–∞—Å—ã"),
    ]))

def create_dirs():
    dirs = ["data", "data/txt", "database", 'data/old_txt']
    import os
    for dir in dirs:
        os.makedirs(dir, exist_ok=True)


async def __init__():
    modules = [
        {"name": "—Å–æ–∑–¥–∞–Ω–∏–µ –Ω—É–∂–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π", "func": create_dirs},
        {"name": "–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ", "func": create_logger, "args": __name__},
        {"name": "–ë–î", "func": DB},
        {"name": "–±–æ—Ç–∞", "func": start_bot},
        {"name": "—É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–æ–º–∞–Ω–¥", "func": cmds}
    ]
    for module in modules:
        print(f"–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é {module['name']}... ", end='', flush=False)
        try:
            if "args" in module:
                module["func"](module["args"])
            else:
                module["func"]()
            print("OK")
        except Exception as e:
            print(f"ERROR ({e})")
            quit(1)
    else:
        while True:
            await asyncio.sleep(1)



if __name__ == '__main__':
    asyncio.run(__init__())
    # asyncio.run(start_bot(), debug=False)
